grammar co.migueljimenez.Terraform with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate terraform "http://www.migueljimenez.co/Terraform"

Template
	:	declarations += Declaration*
	;

Declaration
	:	resource = ValidID (type = StringLiteral)?
		name = StringLiteral
		value = DictionaryLiteral
	;

Value
	:	StringLiteral
	|	NumberLiteral
	|	BooleanLiteral
	|	ListLiteral
	|	DictionaryLiteral
	;

NumberLiteral
	:	{NumberLiteral} (negative ?= '-')? (value = Number)
	;

BooleanLiteral
	:	{BooleanLiteral} (value ?= 'true' | 'false')
	;

ListLiteral
	:	{ListLiteral} '[' (elements += Value (',' elements += Value)*)? ','? ']'
	;

DictionaryLiteral returns Dictionary
	:	{Dictionary} '{' elements += KeyValuePair* '}'
	;

NamedDictionary returns Dictionary
	:	{Dictionary} (name = StringLiteral)? '{' elements += KeyValuePair* '}'
	;

KeyValuePair
	:	key = ValidID '=' value = Value
	|	key = ValidID value = NamedDictionary
	;

StringLiteral
	:	TextLiteral
	|	TextExpression
	;

TextLiteral
	:	value = STRING
	;

TextExpression
	:	s=TEXT_EXP_START expression = Expression e=TEXT_EXP_END
	;

Expression
	:	AttributeReference
	|	FunctionCall
	;

AttributeReference
	:	references += ValidID ('.' references += ValidID)+
	;

// Recursive TextExpression are not supported
FunctionCall
	:	function = ValidID '(' (parameters += Parameter (',' parameters += Parameter)*)? ')'
	;

Parameter
	:	TextLiteral
	|	NumberLiteral
	|	BooleanLiteral
	|	AttributeReference
	;

ValidID
	:	ID
	;

Number hidden():
	HEX | (INT | DECIMAL) ('.' (INT | DECIMAL))?;


@Override 
terminal ID: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-')*;

@Override 
terminal INT returns ecore::EInt: ('0'..'9')+;

terminal HEX:
	'0' ('x'|'X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+
	('#' (('b'|'B')('i'|'I') | ('l'|'L')))?;

terminal DECIMAL:
	INT
	(('e'|'E') ('+'|'-')? INT)?
	(('b'|'B')('i'|'I'|'d'|'D') | ('l'|'L'|'d'|'D'|'f'|'F'))?;

terminal TEXT_EXP_START: '"' '$' '{';
terminal TEXT_EXP_END: '}' '"';

@Override
terminal STRING: '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"'|'$') )* '"';

@Override
terminal SL_COMMENT : ('//' | '#') !('\n'|'\r')* ('\r'? '\n')?;
